-- This file and its contents are licensed under the Timescale License.
-- Please see the included NOTICE for copyright information and
-- LICENSE-TIMESCALE for a copy of the license.
\c :TEST_DBNAME :ROLE_SUPERUSER
CREATE OR REPLACE FUNCTION run_continuous_agg_materialization(
    hypertable REGCLASS,
    materialization_table REGCLASS,
    input_view NAME,
    lowest_modified_value ANYELEMENT,
    greatest_modified_value ANYELEMENT,
    bucket_width "any",
    input_view_schema NAME = 'public'
) RETURNS VOID AS :TSL_MODULE_PATHNAME, 'ts_run_continuous_agg_materialization' LANGUAGE C VOLATILE;
-- stop the continous aggregate background workers from interfering
SELECT _timescaledb_internal.stop_background_workers();
 stop_background_workers 
-------------------------
 t
(1 row)

\c :TEST_DBNAME :ROLE_DEFAULT_PERM_USER
CREATE TABLE continuous_agg_test(time BIGINT, data BIGINT, dummy BOOLEAN);
select create_hypertable('continuous_agg_test', 'time', chunk_time_interval=> 10);
NOTICE:  adding not-null constraint to column "time"
        create_hypertable         
----------------------------------
 (1,public,continuous_agg_test,t)
(1 row)

-- simulated materialization table
CREATE TABLE materialization(time_bucket BIGINT, value BIGINT);
select create_hypertable('materialization', 'time_bucket', chunk_time_interval => 100);
NOTICE:  adding not-null constraint to column "time_bucket"
      create_hypertable       
------------------------------
 (2,public,materialization,t)
(1 row)

\c :TEST_DBNAME :ROLE_SUPERUSER
INSERT INTO _timescaledb_catalog.continuous_aggs_invalidation_threshold VALUES (1, 14);
\c :TEST_DBNAME :ROLE_DEFAULT_PERM_USER
-- simulated continuous_agg insert view
CREATE VIEW test_view(time_bucket, value) AS
    SELECT time_bucket(2, time), COUNT(data) as value
    FROM continuous_agg_test
    GROUP BY 1;
INSERT INTO continuous_agg_test VALUES (10, 1), (11, 2), (12, 3), (13, 4), (14, 1), (15, 1), (16, 1), (17, 1);
SELECT * FROM test_view ORDER BY 1;
 time_bucket | value 
-------------+-------
          10 |     2
          12 |     2
          14 |     2
          16 |     2
(4 rows)

SELECT * FROM materialization ORDER BY 1;
 time_bucket | value 
-------------+-------
(0 rows)

SELECT * FROM _timescaledb_catalog.continuous_aggs_completed_threshold;
 materialization_id | watermark 
--------------------+-----------
(0 rows)

SELECT * FROM _timescaledb_catalog.continuous_aggs_invalidation_threshold;
 hypertable_id | watermark 
---------------+-----------
             1 |        14
(1 row)

-- materialize some of the data into the view
SELECT run_continuous_agg_materialization('continuous_agg_test', 'materialization', 'test_view', 9, 12, 2);
 run_continuous_agg_materialization 
------------------------------------
 
(1 row)

SELECT * FROM materialization ORDER BY 1;
 time_bucket | value 
-------------+-------
          10 |     2
          12 |     2
(2 rows)

SELECT * FROM _timescaledb_catalog.continuous_aggs_completed_threshold;
 materialization_id | watermark 
--------------------+-----------
                  2 |        14
(1 row)

SELECT * FROM _timescaledb_catalog.continuous_aggs_invalidation_threshold;
 hypertable_id | watermark 
---------------+-----------
             1 |        14
(1 row)

-- materialize out of bounds is a nop
SELECT run_continuous_agg_materialization('continuous_agg_test', 'materialization', 'test_view', 16, 19, 2);
 run_continuous_agg_materialization 
------------------------------------
 
(1 row)

SELECT * FROM materialization ORDER BY 1;
 time_bucket | value 
-------------+-------
          10 |     2
          12 |     2
(2 rows)

SELECT * FROM _timescaledb_catalog.continuous_aggs_completed_threshold;
 materialization_id | watermark 
--------------------+-----------
                  2 |        14
(1 row)

SELECT * FROM _timescaledb_catalog.continuous_aggs_invalidation_threshold;
 hypertable_id | watermark 
---------------+-----------
             1 |        14
(1 row)

-- materialize the rest of the data
\c :TEST_DBNAME :ROLE_SUPERUSER
DELETE FROM _timescaledb_catalog.continuous_aggs_invalidation_threshold WHERE hypertable_id = 1;
INSERT INTO _timescaledb_catalog.continuous_aggs_invalidation_threshold VALUES (1, 16);
\c :TEST_DBNAME :ROLE_DEFAULT_PERM_USER
SELECT run_continuous_agg_materialization('continuous_agg_test', 'materialization', 'test_view', 12, 17, 2);
 run_continuous_agg_materialization 
------------------------------------
 
(1 row)

SELECT * FROM materialization ORDER BY 1;
 time_bucket | value 
-------------+-------
          10 |     2
          12 |     2
          14 |     2
(3 rows)

SELECT * FROM _timescaledb_catalog.continuous_aggs_completed_threshold;
 materialization_id | watermark 
--------------------+-----------
                  2 |        16
(1 row)

SELECT * FROM _timescaledb_catalog.continuous_aggs_invalidation_threshold;
 hypertable_id | watermark 
---------------+-----------
             1 |        16
(1 row)

-- insert some additional data into the materialization table
-- (as if we had stale materializations)
INSERT INTO materialization VALUES
    (11, 1),
    (13, 3),
    (15, 4);
SELECT * FROM materialization ORDER BY 1;
 time_bucket | value 
-------------+-------
          10 |     2
          11 |     1
          12 |     2
          13 |     3
          14 |     2
          15 |     4
(6 rows)

-- materializing should delete the invalid data, and leave the correct data
SELECT run_continuous_agg_materialization('continuous_agg_test', 'materialization', 'test_view', 10, 15, 2);
 run_continuous_agg_materialization 
------------------------------------
 
(1 row)

SELECT * FROM materialization ORDER BY 1;
 time_bucket | value 
-------------+-------
          10 |     2
          12 |     2
          14 |     2
(3 rows)

SELECT * FROM _timescaledb_catalog.continuous_aggs_completed_threshold;
 materialization_id | watermark 
--------------------+-----------
                  2 |        16
(1 row)

SELECT * FROM _timescaledb_catalog.continuous_aggs_invalidation_threshold;
 hypertable_id | watermark 
---------------+-----------
             1 |        16
(1 row)

-- test gaps
INSERT INTO continuous_agg_test VALUES
    (9, 0), (10, 1), (11, 2), (12, 3), (13, 4), (20, 1), (21, 1);
\c :TEST_DBNAME :ROLE_SUPERUSER
DELETE FROM _timescaledb_catalog.continuous_aggs_invalidation_threshold WHERE hypertable_id = 1;
INSERT INTO _timescaledb_catalog.continuous_aggs_invalidation_threshold VALUES (1, 22);
\c :TEST_DBNAME :ROLE_DEFAULT_PERM_USER
SELECT run_continuous_agg_materialization('continuous_agg_test', 'materialization', 'test_view', 9, 9, 2);
 run_continuous_agg_materialization 
------------------------------------
 
(1 row)

SELECT * FROM materialization ORDER BY 1;
 time_bucket | value 
-------------+-------
           8 |     1
          10 |     2
          12 |     2
          14 |     2
          16 |     2
          20 |     2
(6 rows)

SELECT * FROM _timescaledb_catalog.continuous_aggs_completed_threshold;
 materialization_id | watermark 
--------------------+-----------
                  2 |        22
(1 row)

SELECT * FROM _timescaledb_catalog.continuous_aggs_invalidation_threshold;
 hypertable_id | watermark 
---------------+-----------
             1 |        22
(1 row)

-- fill in the remaining
SELECT run_continuous_agg_materialization('continuous_agg_test', 'materialization', 'test_view', 10, 12, 2);
 run_continuous_agg_materialization 
------------------------------------
 
(1 row)

SELECT * FROM materialization ORDER BY 1;
 time_bucket | value 
-------------+-------
           8 |     1
          10 |     4
          12 |     4
          14 |     2
          16 |     2
          20 |     2
(6 rows)

SELECT * FROM _timescaledb_catalog.continuous_aggs_completed_threshold;
 materialization_id | watermark 
--------------------+-----------
                  2 |        22
(1 row)

SELECT * FROM _timescaledb_catalog.continuous_aggs_invalidation_threshold;
 hypertable_id | watermark 
---------------+-----------
             1 |        22
(1 row)

-- the bucket containing big_int_max should not be materialized, but all others should
SELECT  9223372036854775807 as big_int_max \gset
SELECT -9223372036854775808	 as big_int_min \gset
\c :TEST_DBNAME :ROLE_SUPERUSER
DELETE FROM _timescaledb_catalog.continuous_aggs_invalidation_threshold WHERE hypertable_id = 1;
INSERT INTO _timescaledb_catalog.continuous_aggs_invalidation_threshold VALUES (1, :big_int_max);
\c :TEST_DBNAME :ROLE_DEFAULT_PERM_USER
INSERT INTO continuous_agg_test VALUES
    (:big_int_max - 4, 1), (:big_int_max - 3, 5), (:big_int_max - 2, 7), (:big_int_max - 1, 9), (:big_int_max, 11),
    (:big_int_min, 22), (:big_int_min + 1, 23);
SELECT run_continuous_agg_materialization('continuous_agg_test', 'materialization', 'test_view', 10, 12, 2);
 run_continuous_agg_materialization 
------------------------------------
 
(1 row)

SELECT * FROM materialization ORDER BY 1;
     time_bucket     | value 
---------------------+-------
                   8 |     1
                  10 |     4
                  12 |     4
                  14 |     2
                  16 |     2
                  20 |     2
 9223372036854775802 |     1
 9223372036854775804 |     2
(8 rows)

SELECT * FROM _timescaledb_catalog.continuous_aggs_completed_threshold;
 materialization_id |      watermark      
--------------------+---------------------
                  2 | 9223372036854775806
(1 row)

SELECT * FROM _timescaledb_catalog.continuous_aggs_invalidation_threshold;
 hypertable_id |      watermark      
---------------+---------------------
             1 | 9223372036854775807
(1 row)

-- test invalidations
SELECT run_continuous_agg_materialization('continuous_agg_test', 'materialization', 'test_view', :big_int_max-6, :big_int_max, 2);
 run_continuous_agg_materialization 
------------------------------------
 
(1 row)

SELECT * FROM materialization ORDER BY 1;
     time_bucket     | value 
---------------------+-------
                   8 |     1
                  10 |     4
                  12 |     4
                  14 |     2
                  16 |     2
                  20 |     2
 9223372036854775802 |     1
 9223372036854775804 |     2
(8 rows)

SELECT * FROM _timescaledb_catalog.continuous_aggs_completed_threshold;
 materialization_id |      watermark      
--------------------+---------------------
                  2 | 9223372036854775806
(1 row)

SELECT * FROM _timescaledb_catalog.continuous_aggs_invalidation_threshold;
 hypertable_id |      watermark      
---------------+---------------------
             1 | 9223372036854775807
(1 row)

SELECT run_continuous_agg_materialization('continuous_agg_test', 'materialization', 'test_view', :big_int_min, :big_int_max, 2);
 run_continuous_agg_materialization 
------------------------------------
 
(1 row)

SELECT * FROM materialization ORDER BY 1;
     time_bucket      | value 
----------------------+-------
 -9223372036854775808 |     2
                    8 |     1
                   10 |     4
                   12 |     4
                   14 |     2
                   16 |     2
                   20 |     2
  9223372036854775802 |     1
  9223372036854775804 |     2
(9 rows)

SELECT * FROM _timescaledb_catalog.continuous_aggs_completed_threshold;
 materialization_id |      watermark      
--------------------+---------------------
                  2 | 9223372036854775806
(1 row)

SELECT * FROM _timescaledb_catalog.continuous_aggs_invalidation_threshold;
 hypertable_id |      watermark      
---------------+---------------------
             1 | 9223372036854775807
(1 row)

TRUNCATE materialization;
-- test dropping columns
ALTER TABLE continuous_agg_test DROP COLUMN dummy;
SELECT run_continuous_agg_materialization('continuous_agg_test', 'materialization', 'test_view', 9, 13, 2);
 run_continuous_agg_materialization 
------------------------------------
 
(1 row)

SELECT * FROM materialization;
 time_bucket | value 
-------------+-------
           8 |     1
          10 |     4
          12 |     4
(3 rows)

ALTER TABLE continuous_agg_test ADD COLUMN d2 int;
TRUNCATE materialization;
SELECT run_continuous_agg_materialization('continuous_agg_test', 'materialization', 'test_view', 9, 13, 2);
 run_continuous_agg_materialization 
------------------------------------
 
(1 row)

SELECT * FROM materialization;
 time_bucket | value 
-------------+-------
           8 |     1
          10 |     4
          12 |     4
(3 rows)

TRUNCATE materialization;
-- name and view that needs quotes
CREATE VIEW "view with spaces"(time_bucket, value) AS
    SELECT time_bucket(2, time), COUNT(data) as value
    FROM continuous_agg_test
    GROUP BY 1;
CREATE TABLE "table with spaces"(time_bucket BIGINT, value BIGINT);
select create_hypertable('"table with spaces"'::REGCLASS, 'time_bucket', chunk_time_interval => 100);
NOTICE:  adding not-null constraint to column "time_bucket"
        create_hypertable         
----------------------------------
 (3,public,"table with spaces",t)
(1 row)

SELECT run_continuous_agg_materialization('continuous_agg_test', '"table with spaces"', 'view with spaces', 9, 21, 2);
 run_continuous_agg_materialization 
------------------------------------
 
(1 row)

SELECT * FROM "view with spaces" ORDER BY 1;
     time_bucket      | value 
----------------------+-------
 -9223372036854775808 |     2
                    8 |     1
                   10 |     4
                   12 |     4
                   14 |     2
                   16 |     2
                   20 |     2
  9223372036854775802 |     1
  9223372036854775804 |     2
  9223372036854775806 |     2
(10 rows)

SELECT * FROM materialization ORDER BY 1;
 time_bucket | value 
-------------+-------
(0 rows)

SELECT * FROM _timescaledb_catalog.continuous_aggs_completed_threshold;
 materialization_id |      watermark      
--------------------+---------------------
                  2 | 9223372036854775806
                  3 | 9223372036854775806
(2 rows)

SELECT * FROM _timescaledb_catalog.continuous_aggs_invalidation_threshold;
 hypertable_id |      watermark      
---------------+---------------------
             1 | 9223372036854775807
(1 row)

DROP TABLE materialization;
----------------------------
----------------------------
----------------------------
-- test with a time type
SET SESSION timezone TO 'UTC';
SET SESSION datestyle TO 'ISO';
CREATE TABLE materialization(time_bucket TIMESTAMPTZ, value BIGINT);
select create_hypertable('materialization', 'time_bucket');
NOTICE:  adding not-null constraint to column "time_bucket"
      create_hypertable       
------------------------------
 (4,public,materialization,t)
(1 row)

CREATE TABLE continuous_agg_test_t(time TIMESTAMPTZ, data int);
select create_hypertable('continuous_agg_test_t', 'time');
NOTICE:  adding not-null constraint to column "time"
         create_hypertable          
------------------------------------
 (5,public,continuous_agg_test_t,t)
(1 row)

INSERT INTO continuous_agg_test_t VALUES
    ('2019-02-02 2:00 UTC', 1),
    ('2019-02-02 3:00 UTC', 1),
    ('2019-02-02 4:00 UTC', 1),
    ('2019-02-02 5:00 UTC', 1);
SELECT * FROM continuous_agg_test_t;
          time          | data 
------------------------+------
 2019-02-02 02:00:00+00 |    1
 2019-02-02 03:00:00+00 |    1
 2019-02-02 04:00:00+00 |    1
 2019-02-02 05:00:00+00 |    1
(4 rows)

TRUNCATE materialization;
\c :TEST_DBNAME :ROLE_SUPERUSER
INSERT INTO _timescaledb_catalog.continuous_aggs_invalidation_threshold VALUES (5, _timescaledb_internal.time_to_internal('2019-02-02 4:00 UTC'::TIMESTAMPTZ));
TRUNCATE _timescaledb_catalog.continuous_aggs_completed_threshold;
\c :TEST_DBNAME :ROLE_DEFAULT_PERM_USER
SET SESSION timezone TO 'UTC';
SET SESSION datestyle TO 'ISO';
CREATE VIEW test_view_t(time_bucket, value) AS
    SELECT time_bucket('2 hours', time) as time_bucket, COUNT(data) as value
    FROM continuous_agg_test_t
    GROUP BY 1;
SELECT run_continuous_agg_materialization('continuous_agg_test_t', 'materialization', 'test_view_t'::NAME, '2019-02-02 2:00 UTC'::TIMESTAMPTZ, '2019-02-02 3:00 UTC'::TIMESTAMPTZ, '2 hours'::INTERVAL);
 run_continuous_agg_materialization 
------------------------------------
 
(1 row)

SELECT time_bucket, value FROM materialization ORDER BY 1;
      time_bucket       | value 
------------------------+-------
 2019-02-02 02:00:00+00 |     2
(1 row)

SELECT * FROM _timescaledb_catalog.continuous_aggs_completed_threshold;
 materialization_id |    watermark     
--------------------+------------------
                  4 | 1549080000000000
(1 row)

SELECT materialization_id, _timescaledb_internal.to_timestamp(watermark)
    FROM _timescaledb_catalog.continuous_aggs_completed_threshold
    WHERE materialization_id = 4;
 materialization_id |      to_timestamp      
--------------------+------------------------
                  4 | 2019-02-02 04:00:00+00
(1 row)

SELECT run_continuous_agg_materialization('continuous_agg_test_t', 'materialization', 'test_view_t'::NAME, '2019-02-02 4:00 UTC'::TIMESTAMPTZ, '2019-02-02 5:00 UTC'::TIMESTAMPTZ, '2 hours'::INTERVAL);
 run_continuous_agg_materialization 
------------------------------------
 
(1 row)

SELECT time_bucket, value FROM materialization ORDER BY 1;
      time_bucket       | value 
------------------------+-------
 2019-02-02 02:00:00+00 |     2
(1 row)

SELECT * FROM _timescaledb_catalog.continuous_aggs_completed_threshold;
 materialization_id |    watermark     
--------------------+------------------
                  4 | 1549080000000000
(1 row)

SELECT materialization_id, _timescaledb_internal.to_timestamp(watermark)
    FROM _timescaledb_catalog.continuous_aggs_completed_threshold
    WHERE materialization_id = 4;
 materialization_id |      to_timestamp      
--------------------+------------------------
                  4 | 2019-02-02 04:00:00+00
(1 row)

\c :TEST_DBNAME :ROLE_SUPERUSER
DELETE FROM _timescaledb_catalog.continuous_aggs_invalidation_threshold WHERE hypertable_id = 5;
INSERT INTO _timescaledb_catalog.continuous_aggs_invalidation_threshold VALUES (5, _timescaledb_internal.time_to_internal('2019-02-02 6:00 UTC'::TIMESTAMPTZ));
TRUNCATE _timescaledb_catalog.continuous_aggs_completed_threshold;
\c :TEST_DBNAME :ROLE_DEFAULT_PERM_USER
SET SESSION timezone TO 'UTC';
SET SESSION datestyle TO 'ISO';
SELECT run_continuous_agg_materialization('continuous_agg_test_t', 'materialization', 'test_view_t'::NAME, '2019-02-02 4:00 UTC'::TIMESTAMPTZ, '2019-02-02 5:00 UTC'::TIMESTAMPTZ, '2 hours'::INTERVAL);
 run_continuous_agg_materialization 
------------------------------------
 
(1 row)

SELECT time_bucket, value FROM materialization ORDER BY 1;
      time_bucket       | value 
------------------------+-------
 2019-02-02 02:00:00+00 |     2
 2019-02-02 04:00:00+00 |     2
(2 rows)

SELECT * FROM _timescaledb_catalog.continuous_aggs_completed_threshold;
 materialization_id |    watermark     
--------------------+------------------
                  4 | 1549087200000000
(1 row)

SELECT materialization_id, _timescaledb_internal.to_timestamp(watermark)
    FROM _timescaledb_catalog.continuous_aggs_completed_threshold
    WHERE materialization_id = 4;
 materialization_id |      to_timestamp      
--------------------+------------------------
                  4 | 2019-02-02 06:00:00+00
(1 row)

----------------------------
----------------------------
----------------------------
-- test with a real continuous aggregate
\c :TEST_DBNAME :ROLE_SUPERUSER
TRUNCATE _timescaledb_catalog.continuous_aggs_completed_threshold;
TRUNCATE _timescaledb_catalog.continuous_aggs_invalidation_threshold;
\c :TEST_DBNAME :ROLE_DEFAULT_PERM_USER
SET SESSION timezone TO 'UTC';
SET SESSION datestyle TO 'ISO';
SELECT * FROM continuous_agg_test_t;
          time          | data 
------------------------+------
 2019-02-02 02:00:00+00 |    1
 2019-02-02 03:00:00+00 |    1
 2019-02-02 04:00:00+00 |    1
 2019-02-02 05:00:00+00 |    1
(4 rows)

CREATE VIEW test_t_mat_view
    WITH ( timescaledb.continuous_agg = 'start')
    AS SELECT time_bucket('2 hours', time), COUNT(data) as value
        FROM continuous_agg_test_t
        GROUP BY 1;
NOTICE:  adding not-null constraint to column "time_partition_col"
--TODO this should be created as part of CREATE VIEW
SELECT id as raw_table_id FROM _timescaledb_catalog.hypertable WHERE table_name='continuous_agg_test_t' \gset
CREATE TRIGGER continuous_agg_insert_trigger
    AFTER INSERT ON continuous_agg_test_t
    FOR EACH ROW EXECUTE PROCEDURE _timescaledb_internal.continuous_agg_invalidation_trigger(:raw_table_id);
SELECT mat_hypertable_id, raw_hypertable_id, user_view_schema, user_view_name,
       partial_view_schema, partial_view_name,
       _timescaledb_internal.to_timestamp(bucket_width), _timescaledb_internal.to_interval(refresh_lag),
       job_id
    FROM _timescaledb_catalog.continuous_agg;
 mat_hypertable_id | raw_hypertable_id | user_view_schema | user_view_name  |  partial_view_schema  |        partial_view_name        |      to_timestamp      | to_interval | job_id 
-------------------+-------------------+------------------+-----------------+-----------------------+---------------------------------+------------------------+-------------+--------
                 6 |                 5 | public           | test_t_mat_view | _timescaledb_internal | ts_internal_test_t_mat_viewview | 1970-01-01 02:00:00+00 | @ 4 hours   |   1000
(1 row)

SELECT mat_hypertable_id FROM _timescaledb_catalog.continuous_agg \gset
\c :TEST_DBNAME :ROLE_SUPERUSER
UPDATE _timescaledb_catalog.continuous_agg
    SET refresh_lag=7200000000
    WHERE mat_hypertable_id=:mat_hypertable_id;
\c :TEST_DBNAME :ROLE_DEFAULT_PERM_USER
SET SESSION timezone TO 'UTC';
SET SESSION datestyle TO 'ISO';
SELECT _timescaledb_internal.to_interval(refresh_lag)
    FROM _timescaledb_catalog.continuous_agg;
 to_interval 
-------------
 @ 2 hours
(1 row)

SELECT * FROM test_t_mat_view;
 time_bucket | value 
-------------+-------
(0 rows)

SELECT * FROM _timescaledb_internal.ts_internal_test_t_mat_viewtab ORDER BY 1;
 time_partition_col | tscol2 | chunk_id 
--------------------+--------+----------
(0 rows)

SELECT * FROM _timescaledb_catalog.continuous_aggs_completed_threshold;
 materialization_id | watermark 
--------------------+-----------
(0 rows)

SELECT materialization_id, _timescaledb_internal.to_timestamp(watermark)
    FROM _timescaledb_catalog.continuous_aggs_completed_threshold
    WHERE materialization_id = :mat_hypertable_id;
 materialization_id | to_timestamp 
--------------------+--------------
(0 rows)

REFRESH MATERIALIZED VIEW test_t_mat_view;
INFO:  new materialization range for public.continuous_agg_test_t (time column time) (1549072800000000)
INFO:  materializing continuous aggregate public.test_t_mat_view: new range up to 1549072800000000
SELECT * FROM _timescaledb_internal.ts_internal_test_t_mat_viewtab ORDER BY 1;
 time_partition_col | tscol2 | chunk_id 
--------------------+--------+----------
(0 rows)

SELECT * FROM test_t_mat_view ORDER BY 1;
 time_bucket | value 
-------------+-------
(0 rows)

SELECT * FROM _timescaledb_catalog.continuous_aggs_completed_threshold;
 materialization_id |    watermark     
--------------------+------------------
                  6 | 1549072800000000
(1 row)

SELECT materialization_id, _timescaledb_internal.to_timestamp(watermark)
    FROM _timescaledb_catalog.continuous_aggs_completed_threshold
    WHERE materialization_id = :mat_hypertable_id;
 materialization_id |      to_timestamp      
--------------------+------------------------
                  6 | 2019-02-02 02:00:00+00
(1 row)

SELECT hypertable_id, _timescaledb_internal.to_timestamp(watermark) FROM _timescaledb_catalog.continuous_aggs_invalidation_threshold;
 hypertable_id |      to_timestamp      
---------------+------------------------
             5 | 2019-02-02 02:00:00+00
(1 row)

REFRESH MATERIALIZED VIEW test_t_mat_view;
INFO:  new materialization range not found for public.continuous_agg_test_t (time column time): not enough new data past completeion threshold (1549072800000000)
INFO:  materializing continuous aggregate public.test_t_mat_view: no new range to materialize
INFO:  materializing continuous aggregate public.test_t_mat_view: no new range to materialize or invalidations found, exiting early
SELECT * FROM _timescaledb_internal.ts_internal_test_t_mat_viewtab ORDER BY 1;
 time_partition_col | tscol2 | chunk_id 
--------------------+--------+----------
(0 rows)

SELECT * FROM test_t_mat_view ORDER BY 1;
 time_bucket | value 
-------------+-------
(0 rows)

SELECT * FROM _timescaledb_catalog.continuous_aggs_completed_threshold;
 materialization_id |    watermark     
--------------------+------------------
                  6 | 1549072800000000
(1 row)

SELECT materialization_id, _timescaledb_internal.to_timestamp(watermark)
    FROM _timescaledb_catalog.continuous_aggs_completed_threshold
    WHERE materialization_id = :mat_hypertable_id;
 materialization_id |      to_timestamp      
--------------------+------------------------
                  6 | 2019-02-02 02:00:00+00
(1 row)

SELECT hypertable_id, _timescaledb_internal.to_timestamp(watermark) FROM _timescaledb_catalog.continuous_aggs_invalidation_threshold;
 hypertable_id |      to_timestamp      
---------------+------------------------
             5 | 2019-02-02 02:00:00+00
(1 row)

-- increase the last timestamp, so we actually materialize
INSERT INTO continuous_agg_test_t VALUES ('2019-02-02 7:00 UTC', 1);
SELECT * FROM continuous_agg_test_t ORDER BY 1;
          time          | data 
------------------------+------
 2019-02-02 02:00:00+00 |    1
 2019-02-02 03:00:00+00 |    1
 2019-02-02 04:00:00+00 |    1
 2019-02-02 05:00:00+00 |    1
 2019-02-02 07:00:00+00 |    1
(5 rows)

REFRESH MATERIALIZED VIEW test_t_mat_view;
INFO:  new materialization range for public.continuous_agg_test_t (time column time) (1549080000000000)
INFO:  materializing continuous aggregate public.test_t_mat_view: new range up to 1549080000000000
SELECT * FROM test_t_mat_view ORDER BY 1;
      time_bucket       | value 
------------------------+-------
 2019-02-02 02:00:00+00 |     2
(1 row)

SELECT materialization_id, _timescaledb_internal.to_timestamp(watermark)
    FROM _timescaledb_catalog.continuous_aggs_completed_threshold
    WHERE materialization_id = :mat_hypertable_id;
 materialization_id |      to_timestamp      
--------------------+------------------------
                  6 | 2019-02-02 04:00:00+00
(1 row)

SELECT hypertable_id, _timescaledb_internal.to_timestamp(watermark) FROM _timescaledb_catalog.continuous_aggs_invalidation_threshold;
 hypertable_id |      to_timestamp      
---------------+------------------------
             5 | 2019-02-02 04:00:00+00
(1 row)

-- test invalidations
INSERT INTO continuous_agg_test_t VALUES
    ('2019-02-02 2:00 UTC', 1),
    ('2019-02-02 3:00 UTC', 1),
    ('2019-02-02 4:00 UTC', 1),
    ('2019-02-02 5:00 UTC', 1);
SELECT * FROM _timescaledb_catalog.continuous_aggs_hypertable_invalidation_log;
 hypertable_id | lowest_modified_value | greatest_modified_value 
---------------+-----------------------+-------------------------
             5 |      1549072800000000 |        1549083600000000
(1 row)

REFRESH MATERIALIZED VIEW test_t_mat_view;
INFO:  new materialization range not found for public.continuous_agg_test_t (time column time): not enough new data past completeion threshold (1549080000000000)
INFO:  materializing continuous aggregate public.test_t_mat_view: no new range to materialize
SELECT * FROM test_t_mat_view ORDER BY 1;
      time_bucket       | value 
------------------------+-------
 2019-02-02 02:00:00+00 |     4
(1 row)

SELECT * FROM _timescaledb_catalog.continuous_aggs_completed_threshold;
 materialization_id |    watermark     
--------------------+------------------
                  6 | 1549080000000000
(1 row)

SELECT materialization_id, _timescaledb_internal.to_timestamp(watermark)
    FROM _timescaledb_catalog.continuous_aggs_completed_threshold
    WHERE materialization_id = :mat_hypertable_id;
 materialization_id |      to_timestamp      
--------------------+------------------------
                  6 | 2019-02-02 04:00:00+00
(1 row)

SELECT hypertable_id, _timescaledb_internal.to_timestamp(watermark) FROM _timescaledb_catalog.continuous_aggs_invalidation_threshold;
 hypertable_id |      to_timestamp      
---------------+------------------------
             5 | 2019-02-02 04:00:00+00
(1 row)

-- test extremes
CREATE TABLE continuous_agg_extreme(time BIGINT, data BIGINT);
SELECT create_hypertable('continuous_agg_extreme', 'time', chunk_time_interval=> 10);
NOTICE:  adding not-null constraint to column "time"
          create_hypertable          
-------------------------------------
 (7,public,continuous_agg_extreme,t)
(1 row)

-- TODO we should be able to use time_bucket(5, ...) (note lack of '), but that is currently not
--      recognized as a constant
CREATE VIEW extreme_view
    WITH ( timescaledb.continuous_agg = 'start')
    AS SELECT time_bucket('1', time), SUM(data) as value
        FROM continuous_agg_extreme
        GROUP BY 1;
NOTICE:  adding not-null constraint to column "time_partition_col"
--TODO this should be created as part of CREATE VIEW
SELECT id as raw_table_id FROM _timescaledb_catalog.hypertable WHERE table_name='continuous_agg_extreme' \gset
CREATE TRIGGER continuous_agg_insert_trigger
    AFTER INSERT ON continuous_agg_extreme
    FOR EACH ROW EXECUTE PROCEDURE _timescaledb_internal.continuous_agg_invalidation_trigger(:raw_table_id);
SELECT mat_hypertable_id FROM _timescaledb_catalog.continuous_agg WHERE raw_hypertable_id=:raw_table_id \gset
-- EMPTY table should be a nop
REFRESH MATERIALIZED VIEW extreme_view;
INFO:  new materialization range not found for public.continuous_agg_extreme (time column time): no new data
INFO:  materializing continuous aggregate public.extreme_view: no new range to materialize
INFO:  materializing continuous aggregate public.extreme_view: no new range to materialize or invalidations found, exiting early
SELECT * FROM extreme_view;
 time_bucket | value 
-------------+-------
(0 rows)

SELECT materialization_id, watermark
    FROM _timescaledb_catalog.continuous_aggs_completed_threshold
    WHERE materialization_id=:mat_hypertable_id;
 materialization_id | watermark 
--------------------+-----------
(0 rows)

SELECT hypertable_id, watermark
    FROM _timescaledb_catalog.continuous_aggs_invalidation_threshold
    WHERE hypertable_id=:raw_table_id;
 hypertable_id | watermark 
---------------+-----------
(0 rows)

-- less than a bucket above MIN should be a nop
INSERT INTO continuous_agg_extreme VALUES
    (:big_int_min,   1);
REFRESH MATERIALIZED VIEW extreme_view;
INFO:  new materialization range not found for public.continuous_agg_extreme (time column time): not enough data in table (-9223372036854775808)
INFO:  materializing continuous aggregate public.extreme_view: no new range to materialize
INFO:  materializing continuous aggregate public.extreme_view: no new range to materialize or invalidations found, exiting early
SELECT * FROM extreme_view;
 time_bucket | value 
-------------+-------
(0 rows)

SELECT materialization_id, watermark
    FROM _timescaledb_catalog.continuous_aggs_completed_threshold
    WHERE materialization_id=:mat_hypertable_id;
 materialization_id | watermark 
--------------------+-----------
(0 rows)

SELECT hypertable_id, watermark
    FROM _timescaledb_catalog.continuous_aggs_invalidation_threshold
    WHERE hypertable_id=:raw_table_id;
 hypertable_id | watermark 
---------------+-----------
(0 rows)

-- but we will be able to materialize it once we have enough values
INSERT INTO continuous_agg_extreme VALUES
    (:big_int_min+10, 11);
REFRESH MATERIALIZED VIEW extreme_view;
INFO:  new materialization range for public.continuous_agg_extreme (time column time) (-9223372036854775800)
INFO:  materializing continuous aggregate public.extreme_view: new range up to -9223372036854775800
SELECT * FROM extreme_view;
     time_bucket      | value 
----------------------+-------
 -9223372036854775808 |     1
(1 row)

SELECT materialization_id, watermark
    FROM _timescaledb_catalog.continuous_aggs_completed_threshold
    WHERE materialization_id=:mat_hypertable_id;
 materialization_id |      watermark       
--------------------+----------------------
                  8 | -9223372036854775800
(1 row)

SELECT hypertable_id, watermark
    FROM _timescaledb_catalog.continuous_aggs_invalidation_threshold
    WHERE hypertable_id=:raw_table_id;
 hypertable_id |      watermark       
---------------+----------------------
             7 | -9223372036854775800
(1 row)

-- we don't materialize the max value, but attempting will materialize the entire
-- table up to the materialization limit
INSERT INTO continuous_agg_extreme VALUES
    (100,                     101),
    (:big_int_max-5,          201),
    (:big_int_max-4,          201),
    (:big_int_max-3,          201),
    (:big_int_max-2,          201),
    (:big_int_max-1,          201),
    (:big_int_max,   :big_int_max);
REFRESH MATERIALIZED VIEW extreme_view;
INFO:  new materialization range for public.continuous_agg_extreme (time column time) (9223372036854775805)
INFO:  materializing continuous aggregate public.extreme_view: new range up to 9223372036854775805
SELECT * FROM extreme_view ORDER BY 1;
     time_bucket      | value 
----------------------+-------
 -9223372036854775808 |     1
 -9223372036854775798 |    11
                  100 |   101
  9223372036854775802 |   201
  9223372036854775803 |   201
  9223372036854775804 |   201
(6 rows)

SELECT materialization_id, watermark
    FROM _timescaledb_catalog.continuous_aggs_completed_threshold
    WHERE materialization_id=:mat_hypertable_id;
 materialization_id |      watermark      
--------------------+---------------------
                  8 | 9223372036854775805
(1 row)

SELECT hypertable_id, watermark
    FROM _timescaledb_catalog.continuous_aggs_invalidation_threshold
    WHERE hypertable_id=:raw_table_id;
 hypertable_id |      watermark      
---------------+---------------------
             7 | 9223372036854775805
(1 row)

--cleanup of continuous agg views --
drop view test_t_mat_view cascade;
NOTICE:  drop cascades to table _timescaledb_internal._hyper_6_16_chunk
drop view extreme_view cascade;
NOTICE:  drop cascades to 4 other objects
