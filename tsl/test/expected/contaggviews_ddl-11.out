-- This file and its contents are licensed under the Timescale License.
-- Please see the included NOTICE for copyright information and
-- LICENSE-TIMESCALE for a copy of the license.
\set ON_ERROR_STOP 0
--DDL commands on continuous aggregates
CREATE TABLE conditions (
      timec        TIMESTAMPTZ       NOT NULL,
      location    TEXT              NOT NULL,
      temperature integer  NULL,
      humidity    DOUBLE PRECISION  NULL,
      timemeasure TIMESTAMPTZ,
      timeinterval INTERVAL
);
select table_name from create_hypertable('conditions', 'timec');
 table_name 
------------
 conditions
(1 row)

-- check that GRANTS work correctly
\c :TEST_DBNAME :ROLE_SUPERUSER
create  view mat_m1 WITH ( timescaledb.continuous)
AS
Select sum( temperature ), min(location)
from conditions
group by time_bucket('1week', timec);
NOTICE:  adding not-null constraint to column "time_partition_col"
GRANT select on mat_m1 to :ROLE_DEFAULT_PERM_USER;
\c :TEST_DBNAME :ROLE_DEFAULT_PERM_USER_2
select count(*) from mat_m1;
ERROR:  permission denied for view mat_m1
\c :TEST_DBNAME :ROLE_DEFAULT_PERM_USER
select count(*) from mat_m1;
 count 
-------
     0
(1 row)

\set ON_ERROR_STOP 1
-- schema tests
\c :TEST_DBNAME :ROLE_SUPERUSER
CREATE SCHEMA rename_schema;
GRANT ALL ON SCHEMA rename_schema TO :ROLE_DEFAULT_PERM_USER;
\c :TEST_DBNAME :ROLE_DEFAULT_PERM_USER
CREATE TABLE foo(time TIMESTAMPTZ, data INTEGER);
SELECT create_hypertable('foo', 'time');
NOTICE:  adding not-null constraint to column "time"
 create_hypertable 
-------------------
 (3,public,foo,t)
(1 row)

CREATE VIEW rename_test WITH ( timescaledb.continuous)
AS SELECT time_bucket('1week', time), COUNT(data)
    FROM foo
    GROUP BY 1;
NOTICE:  adding not-null constraint to column "time_partition_col"
SELECT user_view_schema, user_view_name, partial_view_schema, partial_view_name
      FROM _timescaledb_catalog.continuous_agg;
 user_view_schema | user_view_name |  partial_view_schema  |      partial_view_name      
------------------+----------------+-----------------------+-----------------------------
 public           | mat_m1         | _timescaledb_internal | ts_internal_mat_m1view
 public           | rename_test    | _timescaledb_internal | ts_internal_rename_testview
(2 rows)

ALTER VIEW rename_test SET SCHEMA rename_schema;
SELECT user_view_schema, user_view_name, partial_view_schema, partial_view_name
      FROM _timescaledb_catalog.continuous_agg;
 user_view_schema | user_view_name |  partial_view_schema  |      partial_view_name      
------------------+----------------+-----------------------+-----------------------------
 public           | mat_m1         | _timescaledb_internal | ts_internal_mat_m1view
 rename_schema    | rename_test    | _timescaledb_internal | ts_internal_rename_testview
(2 rows)

\c :TEST_DBNAME :ROLE_SUPERUSER
ALTER VIEW _timescaledb_internal.ts_internal_rename_testview SET SCHEMA public;
\c :TEST_DBNAME :ROLE_DEFAULT_PERM_USER
SELECT user_view_schema, user_view_name, partial_view_schema, partial_view_name
      FROM _timescaledb_catalog.continuous_agg;
 user_view_schema | user_view_name |  partial_view_schema  |      partial_view_name      
------------------+----------------+-----------------------+-----------------------------
 public           | mat_m1         | _timescaledb_internal | ts_internal_mat_m1view
 rename_schema    | rename_test    | public                | ts_internal_rename_testview
(2 rows)

--alter direct view schema
SELECT user_view_schema, user_view_name, direct_view_schema, direct_view_name
      FROM _timescaledb_catalog.continuous_agg;
 user_view_schema | user_view_name |  direct_view_schema   |   direct_view_name   
------------------+----------------+-----------------------+----------------------
 public           | mat_m1         | _timescaledb_internal | _dir_mat_m1view
 rename_schema    | rename_test    | _timescaledb_internal | _dir_rename_testview
(2 rows)

\c :TEST_DBNAME :ROLE_SUPERUSER
ALTER VIEW _timescaledb_internal._dir_rename_testview SET SCHEMA public;
\c :TEST_DBNAME :ROLE_DEFAULT_PERM_USER
SELECT user_view_schema, user_view_name, partial_view_schema, partial_view_name,
      direct_view_schema, direct_view_name
      FROM _timescaledb_catalog.continuous_agg;
 user_view_schema | user_view_name |  partial_view_schema  |      partial_view_name      |  direct_view_schema   |   direct_view_name   
------------------+----------------+-----------------------+-----------------------------+-----------------------+----------------------
 public           | mat_m1         | _timescaledb_internal | ts_internal_mat_m1view      | _timescaledb_internal | _dir_mat_m1view
 rename_schema    | rename_test    | public                | ts_internal_rename_testview | public                | _dir_rename_testview
(2 rows)

\c :TEST_DBNAME :ROLE_SUPERUSER
ALTER SCHEMA rename_schema RENAME TO new_name_schema;
\c :TEST_DBNAME :ROLE_DEFAULT_PERM_USER
SELECT user_view_schema, user_view_name, partial_view_schema, partial_view_name
      FROM _timescaledb_catalog.continuous_agg;
 user_view_schema | user_view_name |  partial_view_schema  |      partial_view_name      
------------------+----------------+-----------------------+-----------------------------
 public           | mat_m1         | _timescaledb_internal | ts_internal_mat_m1view
 new_name_schema  | rename_test    | public                | ts_internal_rename_testview
(2 rows)

ALTER VIEW ts_internal_rename_testview SET SCHEMA new_name_schema;
SELECT user_view_schema, user_view_name, partial_view_schema, partial_view_name
      FROM _timescaledb_catalog.continuous_agg;
 user_view_schema | user_view_name |  partial_view_schema  |      partial_view_name      
------------------+----------------+-----------------------+-----------------------------
 public           | mat_m1         | _timescaledb_internal | ts_internal_mat_m1view
 new_name_schema  | rename_test    | new_name_schema       | ts_internal_rename_testview
(2 rows)

\c :TEST_DBNAME :ROLE_SUPERUSER
ALTER SCHEMA new_name_schema RENAME TO foo_name_schema;
\c :TEST_DBNAME :ROLE_DEFAULT_PERM_USER
SELECT user_view_schema, user_view_name, partial_view_schema, partial_view_name
      FROM _timescaledb_catalog.continuous_agg;
 user_view_schema | user_view_name |  partial_view_schema  |      partial_view_name      
------------------+----------------+-----------------------+-----------------------------
 public           | mat_m1         | _timescaledb_internal | ts_internal_mat_m1view
 foo_name_schema  | rename_test    | foo_name_schema       | ts_internal_rename_testview
(2 rows)

ALTER VIEW foo_name_schema.rename_test SET SCHEMA public;
SELECT user_view_schema, user_view_name, partial_view_schema, partial_view_name
      FROM _timescaledb_catalog.continuous_agg;
 user_view_schema | user_view_name |  partial_view_schema  |      partial_view_name      
------------------+----------------+-----------------------+-----------------------------
 public           | mat_m1         | _timescaledb_internal | ts_internal_mat_m1view
 public           | rename_test    | foo_name_schema       | ts_internal_rename_testview
(2 rows)

\c :TEST_DBNAME :ROLE_SUPERUSER
ALTER SCHEMA foo_name_schema RENAME TO rename_schema;
\c :TEST_DBNAME :ROLE_DEFAULT_PERM_USER
SELECT user_view_schema, user_view_name, partial_view_schema, partial_view_name
      FROM _timescaledb_catalog.continuous_agg;
 user_view_schema | user_view_name |  partial_view_schema  |      partial_view_name      
------------------+----------------+-----------------------+-----------------------------
 public           | mat_m1         | _timescaledb_internal | ts_internal_mat_m1view
 public           | rename_test    | rename_schema         | ts_internal_rename_testview
(2 rows)

ALTER VIEW rename_test RENAME TO rename_c_aggregate;
SELECT user_view_schema, user_view_name, partial_view_schema, partial_view_name
      FROM _timescaledb_catalog.continuous_agg;
 user_view_schema |   user_view_name   |  partial_view_schema  |      partial_view_name      
------------------+--------------------+-----------------------+-----------------------------
 public           | mat_m1             | _timescaledb_internal | ts_internal_mat_m1view
 public           | rename_c_aggregate | rename_schema         | ts_internal_rename_testview
(2 rows)

SELECT * FROM rename_c_aggregate;
 time_bucket | count 
-------------+-------
(0 rows)

ALTER VIEW rename_schema.ts_internal_rename_testview RENAME TO partial_view;
SELECT user_view_schema, user_view_name, partial_view_schema, partial_view_name,
      direct_view_schema, direct_view_name
      FROM _timescaledb_catalog.continuous_agg;
 user_view_schema |   user_view_name   |  partial_view_schema  |   partial_view_name    |  direct_view_schema   |   direct_view_name   
------------------+--------------------+-----------------------+------------------------+-----------------------+----------------------
 public           | mat_m1             | _timescaledb_internal | ts_internal_mat_m1view | _timescaledb_internal | _dir_mat_m1view
 public           | rename_c_aggregate | rename_schema         | partial_view           | public                | _dir_rename_testview
(2 rows)

--rename direct view
ALTER VIEW _dir_rename_testview RENAME TO direct_view;
SELECT user_view_schema, user_view_name, partial_view_schema, partial_view_name,
      direct_view_schema, direct_view_name
      FROM _timescaledb_catalog.continuous_agg;
 user_view_schema |   user_view_name   |  partial_view_schema  |   partial_view_name    |  direct_view_schema   | direct_view_name 
------------------+--------------------+-----------------------+------------------------+-----------------------+------------------
 public           | mat_m1             | _timescaledb_internal | ts_internal_mat_m1view | _timescaledb_internal | _dir_mat_m1view
 public           | rename_c_aggregate | rename_schema         | partial_view           | public                | direct_view
(2 rows)

-- drop_chunks tests
DROP TABLE conditions CASCADE;
NOTICE:  drop cascades to 2 other objects
DROP TABLE foo CASCADE;
NOTICE:  drop cascades to 2 other objects
CREATE TABLE drop_chunks_table(time BIGINT, data INTEGER);
SELECT hypertable_id AS drop_chunks_table_id
    FROM create_hypertable('drop_chunks_table', 'time', chunk_time_interval => 10) \gset
NOTICE:  adding not-null constraint to column "time"
CREATE VIEW drop_chunks_view WITH ( timescaledb.continuous, timescaledb.refresh_interval='72 hours')
AS SELECT time_bucket('5', time), COUNT(data)
    FROM drop_chunks_table
    GROUP BY 1;
NOTICE:  adding not-null constraint to column "time_partition_col"
SELECT format('%s.%s', schema_name, table_name) AS drop_chunks_mat_table,
        schema_name AS drop_chunks_mat_schema,
        table_name AS drop_chunks_mat_table_name
    FROM _timescaledb_catalog.hypertable, _timescaledb_catalog.continuous_agg
    WHERE _timescaledb_catalog.continuous_agg.raw_hypertable_id = :drop_chunks_table_id
        AND _timescaledb_catalog.hypertable.id = _timescaledb_catalog.continuous_agg.mat_hypertable_id \gset
-- create 3 chunks, with 3 time bucket
INSERT INTO drop_chunks_table SELECT i, i FROM generate_series(0, 29) AS i;
REFRESH MATERIALIZED VIEW drop_chunks_view;
INFO:  new materialization range for public.drop_chunks_table (time column time) (15)
INFO:  materializing continuous aggregate public.drop_chunks_view: new range up to 15
SELECT count(c) FROM show_chunks('drop_chunks_table') AS c;
 count 
-------
     3
(1 row)

SELECT count(c) FROM show_chunks(:'drop_chunks_mat_table') AS c;
 count 
-------
     1
(1 row)

SELECT * FROM drop_chunks_view ORDER BY 1;
 time_bucket | count 
-------------+-------
           0 |     5
           5 |     5
          10 |     5
(3 rows)

-- cannot drop directly from the materialization table
\set ON_ERROR_STOP 0
SELECT drop_chunks(schema_name => :'drop_chunks_mat_schema',
    table_name => :'drop_chunks_mat_table_name',
    newer_than => -20,
    verbose => true);
ERROR:  cannot drop_chunks on a continuous aggregate materialization table
\set ON_ERROR_STOP 1
SELECT count(c) FROM show_chunks('drop_chunks_table') AS c;
 count 
-------
     3
(1 row)

SELECT count(c) FROM show_chunks(:'drop_chunks_mat_table') AS c;
 count 
-------
     1
(1 row)

SELECT * FROM drop_chunks_view ORDER BY 1;
 time_bucket | count 
-------------+-------
           0 |     5
           5 |     5
          10 |     5
(3 rows)

-- cannot drop from the raw table without specifying cascade_to_materializations
\set ON_ERROR_STOP 0
SELECT drop_chunks(table_name => 'drop_chunks_table', older_than => 10);
ERROR:  cannot drop_chunks on hypertable that has a continuous aggregate without cascade_to_materializations set to true
\set ON_ERROR_STOP 1
SELECT count(c) FROM show_chunks('drop_chunks_table') AS c;
 count 
-------
     3
(1 row)

SELECT count(c) FROM show_chunks(:'drop_chunks_mat_table') AS c;
 count 
-------
     1
(1 row)

SELECT * FROM drop_chunks_view ORDER BY 1;
 time_bucket | count 
-------------+-------
           0 |     5
           5 |     5
          10 |     5
(3 rows)

\set ON_ERROR_STOP 0
SELECT drop_chunks(older_than => 200);
ERROR:  cannot drop_chunks on hypertable that has a continuous aggregate without cascade_to_materializations set to true
\set ON_ERROR_STOP 1
SELECT count(c) FROM show_chunks('drop_chunks_table') AS c;
 count 
-------
     3
(1 row)

SELECT count(c) FROM show_chunks(:'drop_chunks_mat_table') AS c;
 count 
-------
     1
(1 row)

SELECT * FROM drop_chunks_view ORDER BY 1;
 time_bucket | count 
-------------+-------
           0 |     5
           5 |     5
          10 |     5
(3 rows)

SELECT drop_chunks(table_name => 'drop_chunks_table', older_than => 13, cascade_to_materializations => true);
 drop_chunks 
-------------
 
(1 row)

SELECT count(c) FROM show_chunks('drop_chunks_table') AS c;
 count 
-------
     2
(1 row)

SELECT count(c) FROM show_chunks(:'drop_chunks_mat_table') AS c;
 count 
-------
     1
(1 row)

SELECT * FROM drop_chunks_view ORDER BY 1;
 time_bucket | count 
-------------+-------
          10 |     5
(1 row)

-- drop chunks when the chunksize and time_bucket aren't aligned
DROP TABLE drop_chunks_table CASCADE;
NOTICE:  drop cascades to 2 other objects
NOTICE:  drop cascades to table _timescaledb_internal._hyper_6_4_chunk
CREATE TABLE drop_chunks_table_u(time BIGINT, data INTEGER);
SELECT hypertable_id AS drop_chunks_table_u_id
    FROM create_hypertable('drop_chunks_table_u', 'time', chunk_time_interval => 7) \gset
NOTICE:  adding not-null constraint to column "time"
CREATE VIEW drop_chunks_view WITH ( timescaledb.continuous, timescaledb.refresh_interval='72 hours')
AS SELECT time_bucket('3', time), COUNT(data)
    FROM drop_chunks_table_u
    GROUP BY 1;
NOTICE:  adding not-null constraint to column "time_partition_col"
SELECT format('%s.%s', schema_name, table_name) AS drop_chunks_mat_table_u,
        schema_name AS drop_chunks_mat_schema,
        table_name AS drop_chunks_mat_table_u_name
    FROM _timescaledb_catalog.hypertable, _timescaledb_catalog.continuous_agg
    WHERE _timescaledb_catalog.continuous_agg.raw_hypertable_id = :drop_chunks_table_u_id
        AND _timescaledb_catalog.hypertable.id = _timescaledb_catalog.continuous_agg.mat_hypertable_id \gset
-- create 3 chunks, with 3 time bucket
INSERT INTO drop_chunks_table_u SELECT i, i FROM generate_series(0, 21) AS i;
REFRESH MATERIALIZED VIEW drop_chunks_view;
INFO:  new materialization range for public.drop_chunks_table_u (time column time) (15)
INFO:  materializing continuous aggregate public.drop_chunks_view: new range up to 15
SELECT count(c) FROM show_chunks('drop_chunks_table_u') AS c;
 count 
-------
     4
(1 row)

SELECT count(c) FROM show_chunks(:'drop_chunks_mat_table_u') AS c;
 count 
-------
     1
(1 row)

SELECT * FROM drop_chunks_view ORDER BY 1;
 time_bucket | count 
-------------+-------
           0 |     3
           3 |     3
           6 |     3
           9 |     3
          12 |     3
(5 rows)

SELECT drop_chunks(table_name => 'drop_chunks_table_u', older_than => 13, cascade_to_materializations => true);
 drop_chunks 
-------------
 
(1 row)

-- everything in the first chunk (values within [0, 6]) should be dropped
-- the time_bucket [6, 8] will lose it's first value, but should still have
-- the other two
SELECT count(c) FROM show_chunks('drop_chunks_table_u') AS c;
 count 
-------
     3
(1 row)

SELECT count(c) FROM show_chunks(:'drop_chunks_mat_table_u') AS c;
 count 
-------
     1
(1 row)

SELECT * FROM drop_chunks_view ORDER BY 1;
 time_bucket | count 
-------------+-------
           6 |     2
           9 |     3
          12 |     3
(3 rows)

-- TRUNCATE test
\set ON_ERROR_STOP 0
TRUNCATE drop_chunks_table_u;
ERROR:  cannot TRUNCATE a hypertable that has a continuous aggregate
TRUNCATE :drop_chunks_mat_table_u;
ERROR:  cannot TRUNCATE a hypertable underlying a continuous aggregate
\set ON_ERROR_STOP 1
-- ALTER TABLE tests
\set ON_ERROR_STOP 0
-- test a variety of ALTER TABLE statements
ALTER TABLE :drop_chunks_mat_table_u RENAME chunk_id TO bad_name;
ERROR:  cannot rename column "chunk_id" of materialization table "ts_internal_drop_chunks_viewtab"
ALTER TABLE :drop_chunks_mat_table_u ADD UNIQUE(chunk_id);
ERROR:  operation not supported on materialization tables
ALTER TABLE :drop_chunks_mat_table_u SET UNLOGGED;
ERROR:  operation not supported on materialization tables
ALTER TABLE :drop_chunks_mat_table_u ENABLE ROW LEVEL SECURITY;
ERROR:  operation not supported on materialization tables
ALTER TABLE :drop_chunks_mat_table_u ADD COLUMN fizzle INTEGER;
ERROR:  operation not supported on materialization tables
ALTER TABLE :drop_chunks_mat_table_u DROP COLUMN chunk_id;
ERROR:  operation not supported on materialization tables
ALTER TABLE :drop_chunks_mat_table_u ALTER COLUMN chunk_id DROP NOT NULL;
ERROR:  operation not supported on materialization tables
ALTER TABLE :drop_chunks_mat_table_u ALTER COLUMN chunk_id SET DEFAULT 1;
ERROR:  operation not supported on materialization tables
ALTER TABLE :drop_chunks_mat_table_u ALTER COLUMN chunk_id SET STORAGE EXTERNAL;
ERROR:  operation not supported on materialization tables
ALTER TABLE :drop_chunks_mat_table_u DISABLE TRIGGER ALL;
ERROR:  operation not supported on materialization tables
ALTER TABLE :drop_chunks_mat_table_u SET TABLESPACE foo;
ERROR:  operation not supported on materialization tables
ALTER TABLE :drop_chunks_mat_table_u NOT OF;
ERROR:  operation not supported on materialization tables
ALTER TABLE :drop_chunks_mat_table_u OWNER TO CURRENT_USER;
ERROR:  operation not supported on materialization tables
\set ON_ERROR_STOP 1
ALTER TABLE :drop_chunks_mat_table_u SET SCHEMA public;
ALTER TABLE :drop_chunks_mat_table_u_name RENAME TO new_name;
\c :TEST_DBNAME :ROLE_DEFAULT_PERM_USER
CREATE INDEX new_name_idx ON new_name(chunk_id);
SELECT * FROM new_name;
 time_partition_col |       tscol2       | chunk_id 
--------------------+--------------------+----------
                  6 | \x0000000000000002 |        6
                  9 | \x0000000000000003 |        6
                 12 | \x0000000000000002 |        6
                 12 | \x0000000000000001 |        7
(4 rows)

SELECT * FROM drop_chunks_view ORDER BY 1;
 time_bucket | count 
-------------+-------
           6 |     2
           9 |     3
          12 |     3
(3 rows)

DROP INDEX new_name_idx;
